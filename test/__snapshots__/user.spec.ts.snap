// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`user resource offchain login should log a user in 1`] = `
Object {
  "hasSignedUp": "[SANITIZED]",
  "user": Object {
    "categories": "[SANITIZED]",
    "created": "2018-12-11T12:37:20.336958",
    "dismissed_signup_prompt": null,
    "dribble": "[SANITIZED]",
    "edited": "[SANITIZED]",
    "email": "[SANITIZED]",
    "ens_domain": "[SANITIZED]",
    "github": "[SANITIZED]",
    "id": 2304,
    "languages": "[SANITIZED]",
    "large_profile_image_url": "[SANITIZED]",
    "last_logged_in": "[SANITIZED]",
    "last_viewed": "[SANITIZED]",
    "linkedin": "[SANITIZED]",
    "name": "[SANITIZED]",
    "organization": "[SANITIZED]",
    "page_preview": "[SANITIZED]",
    "public_address": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
    "settings": "[SANITIZED]",
    "skills": "[SANITIZED]",
    "small_profile_image_url": "[SANITIZED]",
    "twitter": "[SANITIZED]",
    "wants_marketing_emails": "[SANITIZED]",
    "website": "[SANITIZED]",
  },
}
`;

exports[`user resource offchain logout should logout a user 1`] = `"Success"`;

exports[`user resource offchain nonce should fetch user's nonce 1`] = `
Object {
  "has_signed_up": true,
  "nonce": "[SANITIZED]",
}
`;

exports[`user resource offchain retrieve should not return user when the address does not exist 1`] = `
Object {
  "stats": Object {},
  "user": null,
}
`;

exports[`user resource offchain retrieve should retrieve user 1`] = `
Object {
  "stats": Object {
    "awarded": "[SANITIZED]",
    "earned": "[SANITIZED]",
    "fulfiller_fulfillment_acceptance": "[SANITIZED]",
    "fulfiller_ratings_given": null,
    "fulfiller_ratings_received": "[SANITIZED]",
    "issuer_fulfillment_acceptance": "[SANITIZED]",
    "issuer_ratings_given": "[SANITIZED]",
    "issuer_ratings_received": "[SANITIZED]",
    "total_bounties": "[SANITIZED]",
    "total_fulfillments": "[SANITIZED]",
    "total_fulfillments_on_bounties": "[SANITIZED]",
  },
  "user": Object {
    "categories": "[SANITIZED]",
    "created": "2018-10-19T00:07:13.243450",
    "dismissed_signup_prompt": null,
    "dribble": "[SANITIZED]",
    "edited": "[SANITIZED]",
    "email": "[SANITIZED]",
    "ens_domain": "[SANITIZED]",
    "github": "[SANITIZED]",
    "id": 845,
    "languages": "[SANITIZED]",
    "large_profile_image_url": "[SANITIZED]",
    "last_logged_in": "[SANITIZED]",
    "last_viewed": "[SANITIZED]",
    "linkedin": "[SANITIZED]",
    "name": "[SANITIZED]",
    "organization": "[SANITIZED]",
    "page_preview": "[SANITIZED]",
    "public_address": "0xe23f91725c6c18204743592f963688b8b8dc2ced",
    "settings": "[SANITIZED]",
    "skills": "[SANITIZED]",
    "small_profile_image_url": "[SANITIZED]",
    "twitter": "[SANITIZED]",
    "wants_marketing_emails": "[SANITIZED]",
    "website": "[SANITIZED]",
  },
}
`;
